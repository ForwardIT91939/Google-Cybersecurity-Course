Activity: Practice writing with Python
------------------------------------------
Task 1:
The lab environment you're working in is a notebook-based coding environment. 
Notebooks, such as this one, consist of two types of cells: (1) text cells, also known as markdown cells, and (2) code cells.
Markdown cells allow you to write plain text and format it in the markdown language. 
Markdown language is used for formatting plain text in text editors and code editors. For example, you can use markdown to make headers, bold or italicize words, format text as code, add hyperlinks, and more.
For this task, write something into the following markdown cell. Be sure to replace the "[Double-click to edit this markdown cell and write something here.]" with your own text. 
When you have finished editing, press the Shift and Enter keys (or on some keyboards, the Shift and Return keys) to display your text.
  - This is amazing!
------------------------------------------
Task 2:
In Python notebooks, code cells allow you to write code comments and code in Python.
To run a code cell, first place your cursor on the cell. Then, you can either click on the play icon, or press the Shift and Enter keys (or on some keyboards, the Shift and Return keys).
For this task, run the following code cell as is and observe the output.
# This cell displays "Hello world!"
print("Hello world!")
  - [Shift]+[Enter]
  Output - Hello world!
------------------------------------------
Task 3:
Writing code comments is a way to document the intention behind code. 
It's a standard that analysts commonly use in their workflow. 
Writing comments that accompany code allows you to keep track of the technical decisions you've made in your project. 
This makes it easier for you and your team to read and revisit your code in order to understand what it does and why you took certain approaches.
For this task, run the following code cell as is and observe the output.
# In Python, comments do not get displayed
# This code cell contains only comments
  - [Shift]+[Enter]
  Output = Nothing
------------------------------------------
Task 4:
To type in a code cell, first click into the cell. Then you can write comments and code inside the cell.
For this task, add a comment at the beginning of the following code cell, describing what the code is doing. 
Write the comment to say # This cell displays "I am using Python.". Be sure to replace the # YOUR COMMENT HERE with your own comment before running the following cell.
  - # This cell displays "I am using Python"
------------------------------------------
Task 5:
In Python, print() helps you to display information to the screen.
For this task, use print() to display the message "I am a security analyst." by placing that message within the parentheses. 
Be sure to replace the ### YOUR CODE HERE ### with your own code before running the following code cell.
  - print("I am a security analyst")
------------------------------------------
Task 6:
For this task, write a print() statement to display the string "Python is useful for security!" 
Be sure to replace the ### YOUR CODE HERE ### with your own code before running the following code cell.
  - print("Python is useful for security!")
------------------------------------------
Task 7:
For your final task, you'll combine all the print() statements you've encountered and written in this lab up to this point, into one code cell.
Complete the following code with the remaining messages. Be sure to replace each ### YOUR CODE HERE ### with your own code before running the following cell.
  - print("Hello world!")
    print("I am using Python.")
    print("I am a security analyst")
    print("Python is useful for security")
  Output: Hello world!
          I am using Python.
          I am a security analyst
          Python is useful for security!


















