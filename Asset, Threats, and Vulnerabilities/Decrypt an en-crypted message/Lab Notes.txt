Decrypt an en-crypted message
----------------------------------
Baseline Information:
All of the files in your home directory have been encrypted. 
You’ll need to use Linux commands to break the Caesar cipher and decrypt the files so that you can read the hidden messages they contain

Tasks:
- Explore the contents of the home directory and read the contents of a file
- FInd a hidden file and decrypt the Caesar cipher it contains
- Decrypt the encrypted data file to recover your daya and reveal the hidden message
----------------------------------
First Task - Read the contents of the file

- Use the ls command to list the files in the current working directory
  ls

[Two files, Q1.encrypted and README.txt, and a subdirectory, caesar, are listed:
Q1.encrypted  README.txt caesar]

[The README.txt file contains an important message with instructions you need to follow.]

- Use the cat command to list the contents of the README.txt file
  cat README.txt

[The message in the README.txt file advises that the caesar subdirectory contains a hidden file]
----------------------------------
Second Task - Find a hidden file

- First, use the cd command to change to the caesar subdirectory of your home directory:
  cd caesar

- Use the ls -a command to list all files, including hidden files, in your home directory.
  la - a

This will display the following output:
.  ..  .leftShift3
[Hidden files in Linux can be identified by their name starting with a period (.)]

- Use the cat command to list the contents of the .leftShift3 file
  cat .leftShift3
Output: 
Lq rghu wr uhfryhu brxu ilohv brx zloo qhhg wr hqwhu wkh iroorzlqj frppdqg:

rshqvvo dhv-256-fef -sengi2 -d -g -lq T1.hqfubswhg -rxw T1.uhfryhuhg -n hwwxeuxwh

[The message in the .leftShift3 file appears to be scrambled. This is because the data has been encrypted using a Caesar cipher. 
This cipher can be solved by shifting each alphabet character to the left or right by a fixed number of spaces. 
In this example, the shift is three letters to the left. Thus "d" stands for "a", and "e" stands for "b".]

- You can decrypt the Caesar cipher in the .leftshift3 file by using the following command:
  cat .leftShift3 | tr "d-za-cD-ZA-C" "a-zA-Z"

[NOTE]
The tr command translates text from one set of characters to another, using a mapping. 
The first parameter to the tr command represents the input set of characters, and the second represents the output set of characters. 
Hence, if you provide parameters “abcd” and “pqrs”, and the input string to the tr command is “ac”, the output string will be “pr".

In this case, the command tr "d-za-cD-ZA-C" "a-zA-Z" translates all the lowercase and uppercase letters in the alphabet back to their original position. 
The first character set, indicated by "d-za-cD-ZA-C", is translated to the second character set, which is "a-zA-Z".

- Now, return to your home directory before completing the next task:
  cd ~
----------------------------------
Third Task - Decrpyt a File

- Use the exact command revealed in the previous task to decrypt the encrypted file:
  openssl aes-256-cbc -pbkdf2 -a -d -in Q1.encrypted -out Q1.recovered -k ettubrute

[NOTE]
Although you don't need to memorize this command, to help you better understand the syntax used, let's break it down.

In this instance, the openssl command reverses the encryption of the file with a secure symmetric cipher, as indicated by AES-256-CBC. 
The -pbkdf2 option is used to add extra security to the key, and -a indicates the desired encoding for the output. 
The -d indicates decrypting, while -in specifies the input file and -out specifies the output file. The -k specifies the password, which in this example is ettubrute.

- Use the ls command to list the contents of your current working directory again.
  ls
[The new file Q1.recovered in the directory listing is the decrypted file and contains a message.]

- Use the cat command to list the contents of the Q1.recovered file
  cat Q1.recovered 








